plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'com.github.davidmc24.gradle.plugin.avro' version '1.3.0' // Avro plugin
}

group = 'com.rahul.sdr.avro'
version = '0.0.1-SNAPSHOT'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

java {
    sourceCompatibility = '21'
    targetCompatibility = '21'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.apache.kafka:kafka-clients:3.7.0'
    implementation 'io.confluent:kafka-avro-serializer:5.3.0'
    implementation 'org.apache.avro:avro:1.11.1'

    implementation 'redis.clients:jedis:5.1.3'

    implementation 'org.projectlombok:lombok:1.18.32' // Add Lombok dependency
    annotationProcessor 'org.projectlombok:lombok:1.18.32' // Lombok annotation processor

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.testcontainers:kafka:1.17.6'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
    useJUnitPlatform()
}

generateAvroJava {
    source = file("src/main/avro")
    outputDir = file("src/main/java")
    outputCharacterEncoding = "UTF-8"
}

// Exclude the main source set to prevent Gradle from expecting a main class
sourceSets {
    main {
        java {
            srcDirs = []
        }
        resources {
            srcDirs = []
        }
    }
}

jar {
    manifest {
        attributes(
                'Implementation-Title': 'Spring Boot Application',
                'Implementation-Version': '1.0',
                'Main-Class': 'com.rahul.sdr.DummyMain' // specify the main class if necessary
        )
    }
}